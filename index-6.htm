
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Loading...</title>
    <meta name="robots" content="noindex, nofollow" />
    <noscript><meta http-equiv="refresh" content="0; url=https://joycasino.com/"/></noscript>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jsrsasign/6.2.2/jsrsasign-all-min.js"></script>

    <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9">
    <link rel="shortcut icon" href="/favicon.ico"/>
    <style type="text/css">
       #message{
           position: absolute;
           top:0;
           left: 0;
           right: 0;
           bottom: 0;
           font-size: 30px;
           margin: auto;
           width: 120px;
           height: 30px;
           text-align: center;
       }
   </style>
</head>
<body>
<div id="console"></div>
<div id="message">Loading...</div>
<script type="text/javascript">
    (function () {
        var generate = function () {
            return String(new Date().getTime());
        };
        var xData = generate();

        var CERTIFICATE = "-----BEGIN CERTIFICATE-----        MIIBsTCCAWugAwIBAgIJAKmUtYSKA0nMMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNV        BAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBX        aWRnaXRzIFB0eSBMdGQwHhcNMTQwNDExMTQ0MjU5WhcNNDEwODI3MTQ0MjU5WjBF        MQswCQYDVQQGEwJBVTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50        ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMEowDQYJKoZIhvcNAQEBBQADOQAwNgIxAMve        ZarkQBd3ISHptpifRpYvzuFcuS4/MNVjLhyl1I8Zr46jDwXbpzijNYbXhId4dwIB        A6NQME4wHQYDVR0OBBYEFKE/JhL+pnRgdm6Wq1OyWcK4sYPjMB8GA1UdIwQYMBaA        FKE/JhL+pnRgdm6Wq1OyWcK4sYPjMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEF        BQADMQABMTvTp2a80C2y+el5HcNxjSVIaKpgdCbiRfC0NvJtZgKLNodMJwSW/Rw/        IcU32Vc=        -----END CERTIFICATE-----";

        var verify = function (data, sign) {
            var signature = new KJUR.crypto.Signature(
                    {
                        alg: "SHA1withRSA",
                        prov: "cryptojs/jsrsa"
                    }
            );
            signature.initVerifyByCertificatePEM(CERTIFICATE);
            signature.updateString(data);
            return signature.verify(b64tohex(sign));
        };

        var getXmlHttp = function() {
            var xmlhttp = new XMLHttpRequest();
            if ( !('onload' in xmlhttp)) {
                if (!window.XDomainRequest) throw new Error("Not supported");
                xmlhttp = new XDomainRequest();
            }
            return xmlhttp;
        };
        var getXDataRequest = function(url, cb) {
            var xmlhttp = getXmlHttp();
            xmlhttp.onload = function() {
                var respXData = JSON.parse(xmlhttp.responseText);
                cb(verify(xData, respXData.x));

            };
            xmlhttp.open('GET', url, true);

            try {
                xmlhttp.send();
            } catch(err) {
                console.log(err)
            }
        };

        var config = {
            "master": "joycasino.com",
            "mirrors": ["1328joycasino.com"],
            "protocol": "https",
        };

        // Links for client download
        var configDownload = {
            "versionsLink": {
                // "Mac64"     : {"link" : ""},
                // "Mac32"     : {"link" : ""},
                "Win64"     : {"link" : "https://joy.pomadorro-cdn.com/dc/joycasino/release/JoyCasino_win64_loader.exe"},
                "Win32"     : {"link" : "https://joy.pomadorro-cdn.com/dc/joycasino/release/JoyCasino_win32_loader.exe"}
                // "Linux64"   : {"link" : ""},
                // "Linux32"   : {"link" : "p"}
            },
            "allClientLink" : {"link" : "http://jj-antiblock.s3-website-us-west-2.amazonaws.com"},
            "apkLink": {"link": "https://joy.pomadorrocdn.com/joycasino/android_native/joycasino.apk"}
        };
        var redirectUrl = function (host) {
            var protocol = config.protocol;
            return protocol + '://' + host + location.search.substr(1) + location.hash
        };

        var HOST_FOUND = false;

        var go = function (host) {
            var protocol = config.protocol;
            getXDataRequest(
                    protocol + '://' + host + '/signature/?x=' + xData,
                    function(isVerified){
                        if(isVerified && !HOST_FOUND){
                            HOST_FOUND = true;
                            location.assign(redirectUrl(host))
                        }
                    }
            );
        };

        var determinePlatform = function (){
            var os = 'Win',
                    arch = 32,
                    v = [0,0,0];
            if (/Windows 10.0|Windows NT 10.0/.test(navigator.userAgent)) {
                v[0] = 10;
            } else if (/Windows 8.1|Windows NT 6.3/.test(navigator.userAgent)) {
                v[0] = 8;
                v[1] = 1;
            } else if (/Windows 8|Windows NT 6.2/.test(navigator.userAgent)) {
                v[0] = 8;
            } else if (/Windows 7|Windows NT 6.1/.test(navigator.userAgent)) {
                v[0] = 7;
            } else if (/Windows NT 6.0/.test(navigator.userAgent)) {
                v[0] = 'Vista';
            } else if (/Windows NT 5.2/.test(navigator.userAgent)) {
                v[0] = 2003;
                v[1] = 'Server';
            } else if (/Windows NT 5.1|Windows XP/.test(navigator.userAgent)) {
                v[0] = 'XP';
            } else if (/Windows NT 5.0|Windows 2000/.test(navigator.userAgent)) {
                v[0] = 2000;
            } else if (/Win 9x 4.90|Windows ME/.test(navigator.userAgent)) {
                v[0] = 'ME';
            } else if (/Windows 98|Win98/.test(navigator.userAgent)) {
                v[0] = 98;
            } else if (/Windows 95|Win95|Windows_95/.test(navigator.userAgent)) {
                v[0] = 95;
            } else if (/Windows NT 4.0|WinNT4.0|WinNT|Windows NT/.test(navigator.userAgent)) {
                v[0] = 'NT';
            } else if (/Windows CE/.test(navigator.userAgent)) {
                v[0] = 'CE';
            } else if (/Win16/.test(navigator.userAgent)) {
                v[0] = 3;
                v[1] = 11;
            } else if (/Mac OS|MacPPC|MacIntel|Mac_PowerPC|Macintosh/.test(navigator.userAgent)) {
                os = 'Mac';
                var a = /Mac OS X (10[\.\_\d]+)/.exec(navigator.userAgent)[1].split('_');
                if (undefined!==a[0]) {v[0] = parseInt(a[0], 10)}
                if (undefined!==a[1]) {v[1] = parseInt(a[1], 10)}
                if (undefined!==a[2]) {v[2] = parseInt(a[2], 10)}
                if ( v[0] >= 10 && v[1] >= 8 ) {arch = 64;}
            } else
            if (/Linux|X11/.test(navigator.userAgent)) {
                os = 'Linux';
            }

            if (undefined !== navigator.cpuClass && (''+navigator.cpuClass).indexOf('64') > -1) {
                arch = 64;
            }
            if (/WOW64|x86_64|Win64/.test(navigator.userAgent)){
                arch = 64;
            }
            return { os: os, arch: arch, v: v }
        };

        var deploy = function () {
            if (window.location.href.indexOf('download-client') != -1){
                var dnLink = determinePlatform().os + determinePlatform().arch;
                if (dnLink in configDownload.versionsLink){
                    dnLink = configDownload.versionsLink[dnLink].link
                } else {
                    location.assign(configDownload["allClientLink"].link);
                    return;
                }
                location.assign(dnLink);
            } else if (window.location.href.indexOf('download-apk') != -1) {
                location.assign(configDownload.apkLink.link);
            } else {
                go(config.master);
                for (var i=0; i < config.mirrors.length; i++){
                    go(config.mirrors[i])
                }
            }
        };
        deploy();
    })();
</script>
</body>
</html>